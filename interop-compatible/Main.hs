module Main (main) where

import qualified Data.Text as Text
import qualified Interop
import qualified System.Environment
import qualified System.Exit

main :: IO ()
main = do
  args <- System.Environment.getArgs
  case args of
    "--help" : _ -> printHelp
    [server, client] -> do
      report <- Interop.checkServerClientCompatibility server client
      case report of
        Left err -> System.Exit.die (Text.unpack err)
        Right () -> Prelude.pure ()
    _ -> do
      putStrLn "interop-compatibility was passed invalid arguments."
      putStrLn ""
      printHelp
      System.Exit.exitFailure

printHelp :: IO ()
printHelp = do
  putStrLn "Usage:"
  putStrLn "  interop-compatibility SERVER_SPEC CLIENT_SPEC"
  putStrLn ""
  putStrLn "  SERVER_SPEC    A spec file generated by the interop library."
  putStrLn "  CLIENT_SPEC    A spec file generated by the interop library."
